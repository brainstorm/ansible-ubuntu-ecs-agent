---
# Based on the instructions at http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-install.html

- name: Make sure vital python packages are installed beforehand
  become: true
  pip:
    name: "{{ item }}"
    state: latest
  with_items:
      - docker-py

- name: Set route_localnet
  sysctl:
    name: net.ipv4.conf.all.route_localnet
    value: 1
    sysctl_set: yes

- name: Setup port forwarding from 80 to 51679 for metadata (1)
  iptables:
    table: nat
    chain: PREROUTING
    protocol: tcp
    destination: 169.254.170.2
    destination_port: 80
    jump: DNAT
    to_destination: 127.0.0.1:51679
    #to_ports: 51679

- name: Setup port forwarding from 80 to 51679 for metadata (2)
  iptables:
    table: nat
    chain: OUTPUT
    destination: 169.254.170.2
    protocol: tcp
    match: tcp
    destination_port: 80
    jump: REDIRECT
    to_ports: 51679

- name: create ecs environment file
  template:
    src=ecs.j2
    dest=/etc/default/ecs
    owner=root
    group=root
    mode=0644

- name: Configure and run the ecs-agent container
  docker_container:
    name: ecs-agent
    image: amazon/amazon-ecs-agent:latest
    state: started
    restart_policy: always
    detach: true
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/ecs/:/log
      - /var/lib/ecs/data:/data
    env_file: /etc/default/ecs
    env:
      ECS_LOGFILE: /log/ecs-agent.log
      ECS_LOGLEVEL: "{{ ubuntu_ecs_agent_loglevel }}"
      ECS_DATADIR: /data
      ECS_CLUSTER: "{{ ubuntu_ecs_agent_cluster_name }}"
      ECS_ENABLE_TASK_IAM_ROLE: "{{ ubuntu_ecs_agent_enable_iam_role }}"
      ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST: "{{ ubuntu_ecs_agent_enable_task_iam_role_network_host }}"
      ECS_RESERVED_PORTS: "{{ ubuntu_ecs_agent_reserved_ports }}"
      ECS_CONTAINER_STOP_TIMEOUT: "{{ ubuntu_ecs_agent_container_stop_timeout }}"
